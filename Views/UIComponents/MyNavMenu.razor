@inject NavigationManager NavigationManager

<div class="menu-container @(IsMenuOpen ? "open" : "closed")">
    <button class="menu-toggle" @onclick="ToggleMenu">
        <i class="@(IsMenuOpen ? "fa-solid fa-chevron-up" : "fa-solid fa-bars")"></i>
    </button>
    <div class="menu-items @(IsMenuOpen ? "show" : "")">
        @* <button @onclick="() => NavigateTo(ViewUri)"><i class="fa-regular fa-calendar-days"></i></button> *@
        @* <button @onclick="() => NavigateTo(FileUri)"><i class="fa-regular fa-pen-to-square"></i></button> *@
        <button @onclick="() => NavigateTo(AboutUri)"><i class="fa-solid fa-info"></i></button>
        <button @onclick="() => NavigateTo(LoginUri)"><i class="fa-regular fa-user"></i></button>
        <!-- Add more navigation buttons as needed -->
    </div>
</div>

@* <div class="menu-container @MenuState"> *@
@*     <button @onclick="ToggleMenu"> *@
@*         <i class="@(IsMenuOpen ? "fa-solid fa-chevron-up" : "fa-solid fa-bars")"></i> *@
@*     </button> *@
@*     @if (IsMenuOpen) *@
@*     { *@
@*         <div class="menu-items"> *@
@*             <button @onclick="() => NavigateTo(ViewUri)"><i class="fa-regular fa-calendar-days"></i></button> *@
@*             <button @onclick="() => NavigateTo(FileUri)"><i class="fa-regular fa-pen-to-square"></i></button> *@
@*             <button @onclick="() => NavigateTo(AboutUri)"><i class="fa-solid fa-info"></i></button> *@
@*             <button @onclick="() => NavigateTo(LoginUri)"><i class="fa-regular fa-user"></i></button> *@
@*         </div> *@
@*     } *@
@* </div> *@

@code {
    private const string ViewUri = "view/current";
    private const string FileUri = "file";
    private const string AboutUri = "about";
    private const string LoginUri = "login";
    
    private bool IsMenuOpen = false;

    private void ToggleMenu()
    {
        IsMenuOpen = !IsMenuOpen;
    }

    private void NavigateTo(string uri, bool includeReturnUrl = true)
    {
        var returnUrl = includeReturnUrl ? $"?redirect={NavigationManager.ToBaseRelativePath(NavigationManager.Uri)}" : "";
        NavigationManager.NavigateTo($"{uri}{returnUrl}");
        IsMenuOpen = false;
    }
}
